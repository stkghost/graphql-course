import { ExecutionResult, GraphQLError } from 'graphql';
import { ExecutionPatchResult } from './types';
export declare function getRegularResponse(executionResult: ExecutionResult, extraHeaders: Record<string, string>): Response;
export declare function getMultipartResponse(asyncExecutionResult: AsyncIterable<ExecutionPatchResult<any>>, extraHeaders: Record<string, string>): Response;
export declare function getPushResponse(asyncExecutionResult: AsyncIterable<ExecutionResult<any>>, extraHeaders: Record<string, string>): Response;
interface ErrorResponseParams {
    status?: number;
    headers: Record<string, string>;
    errors: GraphQLError[];
    isEventStream: boolean;
}
export declare function getErrorResponse({ status, headers, errors, isEventStream, }: ErrorResponseParams): Response;
export {};
